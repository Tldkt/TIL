# #220524 TIL

Git: No
Related 공부 기록: https://www.notion.so/IT-5-08fc84dcdcd94290953111ee0000cb22, https://www.notion.so/IT-3-2a0b7ef3d4e6499c8b0ed556c3c22ff5, https://www.notion.so/IT-6-1603001af7fa4a00a0eea04176782613, https://www.notion.so/IT-7-5206b777cb444a4b87cb67779d8310f8, https://www.notion.so/IT-8-f7c3fb38628b439390cff4c45e210dc0, https://www.notion.so/IT-9-31c41b6f6c4e49eabe5afb6d605265e9
분야: TIL
작성일시: May 24, 2022 2:11 PM
📌 FirstBoard 작업일지: https://www.notion.so/b6eeba5cb29c4ceb8a4aa8ee4c89d3bf

# #220524 TIL

## ****✅오늘 한 일****

- [x]  어제 review
- [x]  CS 기초 학습
- [x]  부트캠프 지원서 틀 짜기
- [x]  프로젝트 계획
- [x]  프로젝트

## 💌Details

---

### ⭕Review

[https://www.notion.so/370be7b7bc5a4d7ca5527b9ee04e44a1?v=c0615eeb50094875a3bc9e7c1902eded](https://www.notion.so/370be7b7bc5a4d7ca5527b9ee04e44a1)

### ⭕지원서 작성

- [x]  SWOT 분석
- [x]  초안 쓰기

### ⭕Computer Science

**✔비전공자를 위한 이해할 수 있는 IT지식 완독**

그동안 외계어로 보이던 것들이 한번에 흐름으로 이해가 됐다…!!! 충격적인 경험이었다.

- 프로그래밍 언어 & 운영체제(OS)
- 네트워크, 클라이언트, 서버
- API와 JSON
- 애플리케이션
- 웹(Web)
- 데이터베이스와 이미지 처리
- 프레임워크와 라이브러리
- 협업, 소스관리, 디자인

각각의 핵심적인 역할과 활용에 대해 배웠다. 

우선 마인드맵으로 정리해서 올리는 것까지만 하자!

[https://kindspoon.tistory.com/44](https://kindspoon.tistory.com/44)

**🚨 여전히 궁금한 점**

클라이언트와 백엔드 모두 웹인데 완전히 정리되진 않았다…!

### ⭕Project

수정 기능

1. **뷰 페이지에 수정 버튼 만들기**

`<a th:href="@{/board/modify/{id}(id = ${board.id})}">수정</a>`

새로운 방식: @ pathvariable 방식

1. **컨트롤러에 수정 누르면 연결될 modify url 연결하기**

```java
@GetMapping("/board/modify/{id}")//해당 id를 받아와서 넘어가라
public String boardModify(@PathVariable("id") Integer id){
    //pathvariable은 url 역슬래시 뒤에 들어간 id를 받아와서 integer id에 넢어준다는 의미
    return "boardmodify";
    //boardmodify 페이지 보여줘
}
```

여기서 끝이 아님 이해가 안됨~~~~~

```java
@GetMapping("/board/modify/{id}")//해당 id를 받아와서 넘어가라
public String boardModify(@PathVariable("id") Integer id,Model model){
    //pathvariable은 url 역슬래시 뒤에 들어간 id를 받아와서 integer id에 넢어준다는 의미
    model.addAttribute("board", boardService.boardView(id))
    return "boardmodify";
    //boardmodify 페이지 보여줘
```

1. **수정하면 보여줄 modify html 화면 만들기**

=write 폼에 있던 내용 그대로 가져오기

but 기존에 작성된 내용이 반영되어야 하므로, 타임리프로 데이터 뿌리기

```java
<form th:action="@{/board/modify/{id}(id = ${board.id})}" method="post">
  <input name="title" type="text" th:value="${board.title}">
  <textarea name="content" th:text="${board.content}"></textarea>
  <button type="submit">수정</button>
</form>

```

1. **modify 화면에서 수정버튼을 누르면 반영되도록 하기**

여기서 board/modify가 아닌 update로 수정했어야 했음!

```java
<form th:action="@{/board/update/{id}(id = ${board.id})}" method="post">
  <input name="title" type="text" th:value="${board.title}">
  <textarea name="content" th:text="${board.content}"></textarea>
  <button type="submit">수정</button>
</form>

```

1. **컨트롤러 클래스에 update 링크를 누르면 뭘 보여줄지 연결해줄 postmapping 필요**

수정하고 나면 바뀐 데이터를 저장하고 리스트로 다시 가야 됨

반영하려면 Board의 임시객체를 만들어서 기존 내용 불러온 뒤, 새롭게 입력한 내용을 덮어쓰는 방식으로 하기

```java
@PostMapping("/board/update/{id}")
public String boardUpdate(@PathVariable("id") Integer id, Board board){
    Board boardTemp = boardService.boardView(id);
    boardTemp.setTitle(board.getTitle());
    boardTemp.setTitle(board.setContent());
    return "redirect:/board/list";
```

![Untitled](#220524%20TIL%20eee43ceb77974a89bc8b57922a5f2616/Untitled.png)

setContent로 당당하게 오타내서 틀렸다!

### ⭕일간회고 summary

**KEEP🚩**

- 오늘처럼만 하자~